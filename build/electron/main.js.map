{"version":3,"file":"main.js","mappings":"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","sources":["webpack://attendance-tracking/webpack/bootstrap","webpack://attendance-tracking/webpack/runtime/compat get default export","webpack://attendance-tracking/webpack/runtime/define property getters","webpack://attendance-tracking/webpack/runtime/hasOwnProperty shorthand","webpack://attendance-tracking/external commonjs \"electron\"","webpack://attendance-tracking/external node-commonjs \"path\"","webpack://attendance-tracking/external node-commonjs \"url\"","webpack://attendance-tracking/external commonjs \"electron-log\"","webpack://attendance-tracking/external commonjs \"dayjs\"","webpack://attendance-tracking/external commonjs \"iohook\"","webpack://attendance-tracking/external commonjs \"electron-updater\"","webpack://attendance-tracking/./electron/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron-log\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"dayjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"iohook\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron-updater\");","import {\n  app,\n  BrowserWindow,\n  ipcMain,\n  screen,\n  protocol,\n  Menu,\n  globalShortcut,\n} from \"electron\";\nimport * as path from \"path\";\nimport * as url from \"url\";\nimport log from \"electron-log\";\nimport dayjs from \"dayjs\";\nimport ioHook from \"iohook\";\nimport { autoUpdater } from 'electron-updater';\n\nlet lastTrackedTime = dayjs();\nlet idleTime = 0;\nlet interval = 30;\nlet productivity = 0;\nlet isActive = false;\nlet isBreak = false;\n\nioHook.on(\"keydown\", () => {\n  if (!isActive) {\n    isActive = true;\n    idleTime = 0;\n  }\n});\n\nprocess.on(\"SIGINT\", () => {\n  ioHook.stop();\n  updateValues();\n  process.exit(0);\n});\nioHook.start();\n\n// --------------------------------------------- IPC Events ---------------------------------------------\nconst args = process.argv.slice(1),\n  serve = args.some((val) => val === \"--serve\");\nlet mainWindow = null;\n\nfunction createWindow() {\n  const size = screen.getPrimaryDisplay().workAreaSize;\n  mainWindow = new BrowserWindow({\n    x: 200,\n    y: 200,\n    width: 414,\n    height: 761,\n    webPreferences: {\n      nodeIntegration: true,\n      allowRunningInsecureContent: false,\n      contextIsolation: false,\n      enableRemoteModule: true,\n      devTools: true,\n    },\n  });\n  mainWindow.setAlwaysOnTop(true, \"floating\");\n  mainWindow.setVisibleOnAllWorkspaces(true);\n  mainWindow.setMenuBarVisibility(false);\n  mainWindow.setFullScreenable(false);\n  mainWindow.setResizable(false);\n\n  if (serve) {\n    mainWindow.loadFile(path.join(__dirname, \"./../src/index.html\"));\n  } else {\n    mainWindow.loadURL(\n      url.format({\n        pathname: path.join(__dirname, \"./../src/index.html\"),\n        protocol: \"file:\",\n        slashes: true,\n      })\n    );\n  }\n\n  mainWindow.on(\"close\", () => {\n    ioHook.stop();\n\n    if (mainWindow.webContents.isDevToolsOpened()) {\n      mainWindow.webContents.closeDevTools();\n    }\n  });\n\n  // Auto updater\n  mainWindow.once('ready-to-show', () => {\n    autoUpdater.checkForUpdatesAndNotify();\n  });\n  mainWindow.on(\"closed\", () => {\n    mainWindow = null;\n  });\n\n  return mainWindow;\n}\n\napp.allowRendererProcessReuse = false;\n\napp.on(\"ready\", async () => {\n  try {\n    globalShortcut.register(\"Control+Shift+I\", () => {\n      if (mainWindow.webContents.isDevToolsOpened()) {\n        mainWindow.webContents.closeDevTools();\n      } else {\n        mainWindow.webContents.openDevTools();\n      }\n    });\n\n   \n    const protocolName = \"safe-file-protocol\";\n\n    // NEEDED FOR PROPER IMAGES LOADING\n    protocol.registerFileProtocol(protocolName, (request, callback) => {\n      const url = request.url.replace(`${protocolName}://`, \"\");\n      try {\n        return callback(decodeURIComponent(url));\n      } catch (error) {\n        log.error(error);\n      }\n    });\n\n    createWindow();\n  } catch (error) {\n    log.error(error);\n    ioHook.stop();\n    app.quit();\n  }\n});\nlet devtools = null;\n\napp.once(\"ready\", () => {\n  // TODO: FOR DEVTOOLS\n  // devtools = new BrowserWindow();\n  // mainWindow.webContents.setDevToolsWebContents(devtools.webContents);\n  // mainWindow.webContents.openDevTools({ mode: \"detach\" });\n});\napp.on(\"window-all-closed\", () => {\n  if (process.platform !== \"darwin\") {\n    ioHook.stop();\n    app.quit();\n  }\n});\n\n\nautoUpdater.on('update-available', () => {\n  mainWindow.webContents.send('update_available');\n});\nautoUpdater.on('update-downloaded', () => {\n  mainWindow.webContents.send('update_downloaded');\n});\nipcMain.on('restart_app', () => {\n  autoUpdater.quitAndInstall();\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","dayjs","idleTime","isActive","ioHook","process","on","updateValues","exit","serve","argv","slice","some","val","mainWindow","app","allowRendererProcessReuse","async","globalShortcut","register","webContents","isDevToolsOpened","closeDevTools","openDevTools","protocolName","protocol","registerFileProtocol","request","callback","url","replace","decodeURIComponent","error","log","screen","getPrimaryDisplay","workAreaSize","BrowserWindow","x","y","width","height","webPreferences","nodeIntegration","allowRunningInsecureContent","contextIsolation","enableRemoteModule","devTools","setAlwaysOnTop","setVisibleOnAllWorkspaces","setMenuBarVisibility","setFullScreenable","setResizable","loadFile","path","__dirname","loadURL","pathname","slashes","once","autoUpdater","checkForUpdatesAndNotify","quit","platform","send","ipcMain","quitAndInstall"],"sourceRoot":""}